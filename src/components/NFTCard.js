import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import React from 'react';
import { Clock, Lock, Unlock, Shield, AlertCircle } from 'lucide-react';
import { formatTime, calculateTimeElapsed } from '../utils/helpers';
import LoadingSpinner from './LoadingSpinner';
import { COLLECTION } from '../utils/constants';
const NFTCard = ({ nft, onStake, onUnstake, loading = false }) => {
    const timeElapsed = nft.stakedAt ? calculateTimeElapsed(nft.stakedAt) : 0;
    const cardClass = `nft-card card ${nft.isStaked ? 'staked' : ''}`;
    const isPartOfCollection = nft.isPartOfCollection;
    return (_jsxs("div", { className: cardClass, children: [_jsxs("div", { className: "relative", children: [_jsx("img", { src: nft.image, alt: nft.name, className: "nft-image", onError: (e) => {
                            e.target.src = `https://picsum.photos/400/400?random=${nft.mint.slice(-4)}`;
                        } }), nft.isStaked && (_jsxs("div", { className: "absolute top-2 right-2 bg-white-10 text-white px-2 py-1 rounded-full text-xs font-semibold flex items-center", children: [_jsx(Lock, { className: "w-3 h-3 mr-1" }), _jsx("span", { children: "Staked" })] })), isPartOfCollection ? (_jsxs("div", { className: "absolute top-2 left-2 gradient-purple text-white px-2 py-1 rounded-full text-xs font-semibold flex items-center", children: [_jsx(Shield, { className: "w-3 h-3 mr-1" }), _jsx("span", { children: COLLECTION.METADATA.name })] })) : (_jsxs("div", { className: "absolute top-2 left-2 bg-white-10 text-white px-2 py-1 rounded-full text-xs font-semibold flex items-center", children: [_jsx(AlertCircle, { className: "w-3 h-3 mr-1" }), _jsx("span", { children: "Not Verified" })] }))] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-semibold text-white text-lg", children: nft.name }), _jsx("p", { className: "text-white-70 text-sm", children: nft.symbol }), _jsxs("p", { className: "text-white-60 text-xs", children: ["Mint: ", nft.mint.slice(0, 4), "...", nft.mint.slice(-4)] })] }), nft.description && (_jsx("p", { className: "text-white-60 text-sm line-clamp-2", children: nft.description })), nft.isStaked && nft.stakedAt && (_jsxs("div", { className: "bg-white-10 rounded-lg p-3 space-y-2", children: [_jsxs("div", { className: "flex items-center text-white-80", children: [_jsx(Clock, { className: "w-4 h-4 mr-2" }), _jsxs("span", { className: "text-sm", children: ["Staked ", timeElapsed, " days ago"] })] }), _jsxs("p", { className: "text-xs text-white-60", children: ["Since: ", formatTime(nft.stakedAt)] })] })), nft.attributes && nft.attributes.length > 0 && (_jsxs("div", { className: "space-y-2", children: [_jsx("p", { className: "text-white-80 text-sm font-medium", children: "Attributes" }), _jsx("div", { className: "flex flex-wrap gap-2", children: nft.attributes.slice(0, 3).map((attr, index) => (_jsxs("span", { className: "bg-white-10 text-white-80 px-2 py-1 rounded text-xs", children: [attr.trait_type, ": ", attr.value] }, index))) })] })), _jsx("div", { className: "pt-2", children: nft.isStaked ? (_jsx("button", { onClick: onUnstake, disabled: loading, className: "btn-secondary w-full", children: loading ? (_jsx(LoadingSpinner, { size: "sm" })) : (_jsxs(_Fragment, { children: [_jsx(Unlock, { className: "w-4 h-4 mr-2" }), _jsx("span", { children: "Unstake" })] })) })) : (_jsx("button", { onClick: onStake, disabled: loading || !isPartOfCollection, className: `${isPartOfCollection ? 'btn-primary' : 'btn-outline'} w-full`, children: loading ? (_jsx(LoadingSpinner, { size: "sm" })) : (_jsxs(_Fragment, { children: [_jsx(Lock, { className: "w-4 h-4 mr-2" }), _jsx("span", { children: isPartOfCollection ? 'Stake' : 'Not Eligible' })] })) })) })] })] }));
};
export default NFTCard;
